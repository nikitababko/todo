{"version":3,"sources":["components/Badge/index.jsx","assets/img/remove.svg","components/List/index.jsx","assets/img/close.svg","components/AddList/index.jsx","assets/img/add.svg","components/Tasks/AddTaskForm.jsx","components/Tasks/Task.jsx","assets/img/edit.svg","components/Tasks/index.jsx","App.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","src","removeSvg","alt","window","confirm","axios","delete","then","removeList","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","AddList","colors","onAddList","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","isLoading","setIsLoading","inputValue","setInputValue","useRef","onClose","Array","isArray","addList","post","colorId","data","filter","c","listObj","catch","alert","finally","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","value","onChange","e","onKeyDown","key","type","placeholder","AddTaskForm","list","onAddTask","visibleForm","setVisibleForm","toggleFormVisible","addTask","obj","listId","text","completed","disabled","addSvg","Task","onEdit","onComplete","checked","htmlFor","Tasks","onEditTitle","onRemoveTask","onEditTask","withoutEmpty","onCompleteTask","to","style","hex","newTitle","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","get","taskObj","newList","taskId","newTaskText","onEditListTitle","title","location","pathname","split","find","Number","push","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.905ab90f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Badge.scss\";\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i\r\n        onClick={onClick}\r\n        className={classNames(\"badge\", { [`badge--${color}`]: color }, className)}\r\n    ></i>\r\n);\r\n\r\nexport default Badge;\r\n","export default __webpack_public_path__ + \"static/media/remove.f5660af3.svg\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"axios\";\r\n\r\nimport Badge from \"components/Badge\";\r\n\r\nimport removeSvg from \"assets/img/remove.svg\";\r\n\r\nimport \"./List.scss\";\r\n\r\nconst List = ({ items, isRemovable, onClick, onRemove, onClickItem, activeItem }) => {\r\n    const removeList = (item) => {\r\n        if (window.confirm(\"Are you sure you want to delete this list?\")) {\r\n            axios.delete(\"http://localhost:3001/lists/\" + item.id).then(() => {\r\n                onRemove(item.id);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ul onClick={onClick} className=\"list\">\r\n            {items.map((item, index) => (\r\n                <li\r\n                    key={index}\r\n                    className={classNames(item.className, {\r\n                        active: item.active\r\n                            ? item.active\r\n                            : activeItem && activeItem.id === item.id,\r\n                    })}\r\n                    onClick={onClickItem ? () => onClickItem(item) : null}\r\n                >\r\n                    <i>{item.icon ? item.icon : <Badge color={item.color.name} />}</i>\r\n                    <span>\r\n                        {item.name}\r\n                        {item.tasks && ` (${item.tasks.length})`}\r\n                    </span>\r\n                    {isRemovable && (\r\n                        <img\r\n                            className=\"list__remove-icon\"\r\n                            src={removeSvg}\r\n                            alt=\"Remove icon\"\r\n                            onClick={() => removeList(item)}\r\n                        />\r\n                    )}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","export default __webpack_public_path__ + \"static/media/close.b83c2023.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport List from \"components/List\";\r\nimport Badge from \"components/Badge\";\r\n\r\nimport closeSvg from \"assets/img/close.svg\";\r\n\r\nimport \"./AddList.scss\";\r\n\r\nconst AddList = ({ colors, onAddList }) => {\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, setSelectedColor] = useState(3);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const ref = useRef();\r\n    useOnClickOutside(ref, () => onClose());\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) {\r\n            setSelectedColor(colors[0].id);\r\n        }\r\n    }, [colors]);\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false);\r\n        setInputValue(\"\");\r\n        setSelectedColor(colors[0].id);\r\n    };\r\n\r\n    const addList = () => {\r\n        if (!inputValue) {\r\n            alert(\"Enter the name of the list.\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        axios\r\n            .post(\"http://localhost:3001/lists\", {\r\n                name: inputValue,\r\n                colorId: selectedColor,\r\n            })\r\n            .then(({ data }) => {\r\n                const color = colors.filter((c) => c.id === selectedColor)[0];\r\n                const listObj = {\r\n                    ...data,\r\n                    color,\r\n                    tasks: [],\r\n                };\r\n                onAddList(listObj);\r\n                onClose();\r\n            })\r\n            .catch(() => {\r\n                alert(\"Failed to add list!\");\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            addList();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-list\">\r\n            <List\r\n                onClick={() => setVisiblePopup(true)}\r\n                items={[\r\n                    {\r\n                        className: \"list__add-button\",\r\n                        icon: (\r\n                            <svg\r\n                                width=\"12\"\r\n                                height=\"12\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M8 1V15\"\r\n                                    stroke=\"black\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                                <path\r\n                                    d=\"M1 8H15\"\r\n                                    stroke=\"black\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                />\r\n                            </svg>\r\n                        ),\r\n                        name: \"Add list\",\r\n                    },\r\n                ]}\r\n            />\r\n            {visiblePopup && (\r\n                <div ref={ref} className=\"add-list__popup\">\r\n                    <img\r\n                        onClick={onClose}\r\n                        src={closeSvg}\r\n                        alt=\"Close button\"\r\n                        className=\"add-list__popup-close-btn\"\r\n                    />\r\n                    <input\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                        onKeyDown={handleKeyPress}\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        placeholder=\"List name\"\r\n                    />\r\n                    <div className=\"add-list__popup-colors\">\r\n                        {colors.map((color) => (\r\n                            <Badge\r\n                                onClick={() => setSelectedColor(color.id)}\r\n                                key={color.id}\r\n                                color={color.name}\r\n                                className={selectedColor === color.id && \"active\"}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <button onClick={addList} className=\"button\">\r\n                        {isLoading ? \"Adding...\" : \"Add\"}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useOnClickOutside = (ref, handler) => {\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            if (!ref.current || ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n\r\n            handler(event);\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", listener);\r\n        document.addEventListener(\"touchstart\", listener);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", listener);\r\n            document.removeEventListener(\"touchstart\", listener);\r\n        };\r\n    }, [ref, handler]);\r\n};\r\n\r\nexport default AddList;\r\n","export default __webpack_public_path__ + \"static/media/add.c4fa83e1.svg\";","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport addSvg from \"assets/img/add.svg\";\r\n\r\nconst AddTaskForm = ({ list, onAddTask }) => {\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(\"\");\r\n\r\n    const toggleFormVisible = () => {\r\n        setVisibleForm(!visibleForm);\r\n        setInputValue(\"\");\r\n    };\r\n\r\n    const addTask = () => {\r\n        const obj = {\r\n            listId: list.id,\r\n            text: inputValue,\r\n            completed: false,\r\n        };\r\n        setIsLoading(true);\r\n        axios\r\n            .post(\"http://localhost:3001/tasks\", obj)\r\n            .then(({ data }) => {\r\n                onAddTask(list.id, data);\r\n                toggleFormVisible();\r\n            })\r\n            .catch(() => {\r\n                alert(\"Failed to add task!\");\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            addTask();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tasks__form\">\r\n            {!visibleForm ? (\r\n                <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n                    <img src={addSvg} alt=\"Add icon\" />\r\n                    <span>New task</span>\r\n                </div>\r\n            ) : (\r\n                <div className=\"tasks__form-block\">\r\n                    <input\r\n                        onKeyDown={handleKeyPress}\r\n                        value={inputValue}\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Task name\"\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                    />\r\n                    <button disabled={isLoading} onClick={addTask} className=\"button\">\r\n                        {isLoading ? \"Adding...\" : \"Add task\"}\r\n                    </button>\r\n                    <button onClick={toggleFormVisible} className=\"button button--grey\">\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import React from \"react\";\r\n\r\nconst Task = ({ id, text, completed, list, onRemove, onEdit, onComplete }) => {\r\n    const onChangeCheckBox = (e) => {\r\n        onComplete(list.id, id, e.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div key={id} className=\"tasks__items-row\">\r\n            <div className=\"checkbox\">\r\n                <input\r\n                    onChange={onChangeCheckBox}\r\n                    id={`task-${id}`}\r\n                    type=\"checkbox\"\r\n                    checked={completed}\r\n                />\r\n                <label htmlFor={`task-${id}`}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 11 8\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                            stroke=\"#000\"\r\n                            strokeWidth=\"1.5\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n                </label>\r\n                <p>{text}</p>\r\n            </div>\r\n            <div className=\"tasks__items-row-actions\">\r\n                <div onClick={() => onEdit(list.id, { id, text })}>\r\n                    <svg\r\n                        width=\"15\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 15 15\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <div onClick={() => onRemove(list.id, id)}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"11\"\r\n                        viewBox=\"0 0 11 11\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","export default __webpack_public_path__ + \"static/media/edit.1bda04de.svg\";","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AddTaskForm from \"./AddTaskForm\";\r\nimport Task from \"./Task\";\r\n\r\nimport editSvg from \"assets/img/edit.svg\";\r\n\r\nimport \"./Tasks.scss\";\r\n\r\nconst Tasks = ({\r\n    list,\r\n    onEditTitle,\r\n    onAddTask,\r\n    onRemoveTask,\r\n    onEditTask,\r\n    withoutEmpty,\r\n    onCompleteTask,\r\n}) => {\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt(\"List name\", list.name);\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios\r\n                .patch(\"http://localhost:3001/lists/\" + list.id, {\r\n                    name: newTitle,\r\n                })\r\n                .catch(() => {\r\n                    alert(\"Failed to update list title!\");\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <Link to={`/lists/${list.id}`}>\r\n                <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n                    {list.name}\r\n                    <img onClick={editTitle} src={editSvg} alt=\"Edit icon\" />\r\n                </h2>\r\n            </Link>\r\n            <div className=\"tasks__items\">\r\n                {!withoutEmpty && list.tasks && !list.tasks.length && <h2>No tasks</h2>}\r\n                {list.tasks &&\r\n                    list.tasks.map((task) => (\r\n                        <Task\r\n                            key={task.id}\r\n                            list={list}\r\n                            onEdit={onEditTask}\r\n                            onRemove={onRemoveTask}\r\n                            onComplete={onCompleteTask}\r\n                            {...task}\r\n                        />\r\n                    ))}\r\n            </div>\r\n            <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Route, useHistory } from \"react-router-dom\";\n\nimport { List, AddList, Tasks } from \"./components\";\n\nfunction App() {\n    const [lists, setLists] = useState(null);\n    const [colors, setColors] = useState(null);\n    const [activeItem, setActiveItem] = useState(null);\n    let history = useHistory();\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:3001/lists?_expand=color&_embed=tasks\")\n            .then(({ data }) => {\n                setLists(data);\n            });\n        axios.get(\"http://localhost:3001/colors\").then(({ data }) => {\n            setColors(data);\n        });\n    }, []);\n\n    const onAddList = (obj) => {\n        const newList = [...lists, obj];\n        setLists(newList);\n    };\n\n    const onAddTask = (listId, taskObj) => {\n        const newList = lists.map((item) => {\n            if (item.id === listId) {\n                item.tasks = [...item.tasks, taskObj];\n            }\n            return item;\n        });\n        setLists(newList);\n    };\n\n    const onRemoveTask = (listId, taskId) => {\n        if (window.confirm(\"Are you sure you want to delete this task?\")) {\n            const newList = lists.map((item) => {\n                if (item.id === listId) {\n                    item.tasks = item.tasks.filter((task) => task.id !== taskId);\n                }\n                return item;\n            });\n            setLists(newList);\n            axios.delete(\"http://localhost:3001/tasks/\" + taskId).catch(() => {\n                alert(\"Failed to delete task!\");\n            });\n        }\n    };\n\n    const onEditTask = (listId, taskObj) => {\n        const newTaskText = window.prompt(\"Task name\", taskObj.text);\n\n        if (!newTaskText) {\n            return;\n        }\n\n        const newList = lists.map((list) => {\n            if (list.id === listId) {\n                list.tasks = list.tasks.map((task) => {\n                    if (task.id === taskObj.id) {\n                        task.text = newTaskText;\n                    }\n                    return task;\n                });\n            }\n            return list;\n        });\n        setLists(newList);\n        axios\n            .patch(\"http://localhost:3001/tasks/\" + taskObj.id, { text: newTaskText })\n            .catch(() => {\n                alert(\"Failed to edit task!\");\n            });\n    };\n\n    const onCompleteTask = (listId, taskId, completed) => {\n        const newList = lists.map((list) => {\n            if (list.id === listId) {\n                list.tasks = list.tasks.map((task) => {\n                    if (task.id === taskId) {\n                        task.completed = completed;\n                    }\n                    return task;\n                });\n            }\n            return list;\n        });\n        setLists(newList);\n        axios.patch(\"http://localhost:3001/tasks/\" + taskId, { completed }).catch(() => {\n            alert(\"Failed to edit task!\");\n        });\n    };\n\n    const onEditListTitle = (id, title) => {\n        const newList = lists.map((item) => {\n            if (item.id === id) {\n                item.name = title;\n            }\n            return item;\n        });\n        setLists(newList);\n    };\n\n    useEffect(() => {\n        const listId = history.location.pathname.split(\"lists/\")[1];\n        if (lists) {\n            const list = lists.find((list) => list.id === Number(listId));\n            setActiveItem(list);\n        }\n    }, [lists, history.location.pathname]);\n\n    return (\n        <div className=\"todo\">\n            <div className=\"todo__sidebar\">\n                <List\n                    onClickItem={() => history.push(`/`)}\n                    items={[\n                        {\n                            active: history.location.pathname === \"/\",\n                            icon: (\n                                <svg\n                                    width=\"18\"\n                                    height=\"18\"\n                                    viewBox=\"0 0 18 18\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\n                                        fill=\"black\"\n                                    />\n                                </svg>\n                            ),\n                            name: \"All tasks\",\n                        },\n                    ]}\n                />\n                {lists ? (\n                    <List\n                        items={lists}\n                        onRemove={(id) => {\n                            const newList = lists.filter((item) => item.id !== id);\n                            setLists(newList);\n                        }}\n                        activeItem={activeItem}\n                        onClickItem={(list) => {\n                            history.push(`/lists/${list.id}`);\n                        }}\n                        isRemovable\n                    />\n                ) : (\n                    \"Downloading...\"\n                )}\n                <AddList onAddList={onAddList} colors={colors} />\n            </div>\n            <div className=\"todo__tasks\">\n                <Route exact path=\"/\">\n                    {lists &&\n                        lists.map((list) => (\n                            <Tasks\n                                key={list.id}\n                                list={list}\n                                onAddTask={onAddTask}\n                                onEditTitle={onEditListTitle}\n                                onRemoveTask={onRemoveTask}\n                                onEditTask={onEditTask}\n                                onCompleteTask={onCompleteTask}\n                                withoutEmpty\n                            />\n                        ))}\n                </Route>\n                <Route path=\"/lists/:id\">\n                    {lists && activeItem && (\n                        <Tasks\n                            list={activeItem}\n                            onAddTask={onAddTask}\n                            onEditTitle={onEditListTitle}\n                            onRemoveTask={onRemoveTask}\n                            onEditTask={onEditTask}\n                            onCompleteTask={onCompleteTask}\n                        />\n                    )}\n                </Route>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}